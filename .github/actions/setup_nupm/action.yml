name: Setup nupm
description: Install and setup nupm environment

inputs:
  nu_version:
    required: true
    description: "A valid NPM-style semver specification, such as '0.86.0', etc. and 'nightly', supports '0.60.0' -> latest and latest 'nightly'"

  nupm_clone_path:
    required: true
    default: "/tmp/nupm"
    description: "The path where nupm will be cloned"

  nupm_path:
    required: true
    default: "~/.local/share/nupm"
    description: "The path where nupm will be installed"

  skip_cache:
    required: false
    default: "false"
    description: "Set to 'true' to skip caching"

outputs:
  nupm_path:
    value: ${{ steps.set-output.outputs.nupm-path }}
    description: "The path to the installed nupm (can be `use`d directly) "

runs:
  using: composite
  steps:
    - name: Cache NuShell
      id: cache-nushell
      if: inputs.skip_cache != 'true' && inputs.nu_version != 'nightly' && inputs.nu_version != '*' && inputs.nu_version != 'latest'
      uses: actions/cache@v2
      with:
        path: /opt/hostedtoolcache/nushell/
        key: nushell-${{ inputs.nu_version }}

    - name: Check Cache Hit
      if: steps.cache-nushell.outputs.cache-hit == 'true'
      run: echo -e "\e[32m\e[1mUSING CACHE\e[0m"
      shell: bash

    - uses: hustcer/setup-nu@v3.7
      with:
        version: ${{ inputs.nu_version }}

    - name: Show Nushell Version
      run: version
      shell: nu {0}

    - run: |
        git clone --depth 1 https://github.com/nushell/nupm ${{ inputs.nupm_clone_path }}
        git -C ${{ inputs.nupm_clone_path }} checkout f7c0843f4d667194beae468614a46cc8d72cc5db
      shell: nu {0}

    - name: Install nupm
      shell: nu {0}
      id: set-output
      run: |
        use ${{ inputs.nupm_clone_path }}/nupm
        let nupm_home = "${{ inputs.nupm_path }}" | path expand
        with-env {NUPM_HOME: $nupm_home} {
          mkdir $env.NUPM_HOME
          nupm install --force --path "${{ inputs.nupm_clone_path }}"
        }

        'nupm-path="${{ inputs.nupm_path }}/modules/nupm"' | save --append $env.GITHUB_OUTPUT
