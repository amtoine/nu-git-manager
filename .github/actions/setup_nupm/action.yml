name: Setup nupm
description: Install and setup nupm environment

inputs:
  nu_version:
    required: true
    description: "A valid NPM-style semver specification, such as '0.86.0', etc. and 'nightly', supports '0.60.0' -> latest and latest 'nightly'"

  skip_cache:
    required: false
    default: "false"
    description: "Set to 'true' to skip caching"

  nupm_commit_hash:
    required: true
    description: "The nupm commit hash to checkout"

outputs:
  nupm_path:
    value: ${{ steps.set-output.outputs.nupm-path }}
    description: "The path to the installed nupm (can be `use`d directly) "

runs:
  using: composite
  steps:
    - name: Cache NuShell
      id: cache-nushell
      if: inputs.skip_cache != 'true' && inputs.nu_version != 'nightly' && inputs.nu_version != '*' && inputs.nu_version != 'latest'
      uses: actions/cache@v3
      with:
        path: ${{ runner.tool_cache }}/nushell/
        key: nushell-${{ runner.os }}-${{ inputs.nu_version }}

    - name: Check Cache Hit
      if: steps.cache-nushell.outputs.cache-hit == 'true'
      run: printf "\033[32;1mUSING CACHE\033[0m\n"
      shell: bash

    - name: Check Cache Miss
      if: steps.cache-nushell.outputs.cache-hit != 'true'
      run: printf "\033[31;1mNOT USING CACHE\033[0m\n"
      shell: bash

    - uses: hustcer/setup-nu@v3.7
      with:
        version: ${{ inputs.nu_version }}

    - name: Show Nushell Version
      run: version
      shell: nu {0}

    - name: Initialize Environment Variables
      run: |
        echo "NUPM_CLONE_PATH=/tmp/nupm" >> $GITHUB_ENV
        echo "NUPM_PATH=~/.local/share/nupm" >> $GITHUB_ENV

    # - name: Cache nupm
    #   if: inputs.skip_cache != 'true'
    #   uses: actions/cache@v3
    #   with:
    #     path: ${{ env.NUPM_CLONE_PATH }}
    #     key: nupm-${{ inputs.nupm_commit_hash }}

    - run: |
        git clone --depth 1 https://github.com/nushell/nupm ${{ env.NUPM_CLONE_PATH }}
        git -C ${{ env.NUPM_CLONE_PATH }} checkout "${{ inputs.nupm_commit_hash}}"
      shell: nu {0}

    - name: Install nupm
      shell: nu {0}
      id: set-output
      run: |
        use ${{ env.NUPM_CLONE_PATH }}/nupm
        let nupm_home = "${{ env.NUPM_PATH }}" | path expand
        with-env {NUPM_HOME: $nupm_home} {
          mkdir $env.NUPM_HOME
          nupm install --force --path "${{ env.NUPM_CLONE_PATH }}"
        }

        'nupm-path="${{ env.NUPM_PATH }}/modules/nupm"' | save --append $env.GITHUB_OUTPUT
